# Nginx configuration for Telegram Bot
# Domain: bot.marcelgladbach.com

server {
    listen 80;
    server_name bot.marcelgladbach.com;
    
    # Redirect HTTP to HTTPS
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    server_name bot.marcelgladbach.com;
    
    # SSL Configuration (using existing Let's Encrypt cert)
    ssl_certificate /etc/letsencrypt/live/marcelgladbach.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/marcelgladbach.com/privkey.pem;
    
    # SSL Security Settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;
    
    # Logging
    access_log /var/log/nginx/bot.marcelgladbach.com.access.log;
    error_log /var/log/nginx/bot.marcelgladbach.com.error.log;
    
    # Telegram Webhook endpoint
    location /telegram-webhook {
        # Only allow Telegram IPs
        allow 149.154.160.0/20;
        allow 91.108.4.0/22;
        deny all;
        
        proxy_pass http://localhost:5000/telegram-webhook;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }
    
    # Health check endpoint (for Uptime Kuma)
    location /health {
        proxy_pass http://localhost:5000/health;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
    }
    
    # Root location (optional status page)
    location / {
        return 200 'Telegram Bot Service\n';
        add_header Content-Type text/plain;
    }
}