name: Deploy Telegram Bot

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run Tests
      env:
        TELEGRAM_BOT_TOKEN: '${{ secrets.TELEGRAM_BOT_TOKEN }}'
        GROQ_API_KEY: '${{ secrets.GROQ_API_KEY }}'
        GOOGLE_SERVICE_ACCOUNT_JSON: '${{ secrets.GOOGLE_SERVICE_ACCOUNT_JSON }}'
        SUPABASE_URL: '${{ secrets.SUPABASE_URL }}'
        SUPABASE_ANON_KEY: '${{ secrets.SUPABASE_ANON_KEY }}'
      run: pytest tests/ -v

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: success()
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup SSH
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

    - name: Create .env file
      run: |
        cat > .env <<EOF
        TELEGRAM_BOT_TOKEN=${{ secrets.TELEGRAM_BOT_TOKEN }}
        GROQ_API_KEY=${{ secrets.GROQ_API_KEY }}
        GOOGLE_SERVICE_ACCOUNT_JSON=${{ secrets.GOOGLE_SERVICE_ACCOUNT_JSON }}
        GOOGLE_DRIVE_ROOT_FOLDER_ID=${{ secrets.GOOGLE_DRIVE_ROOT_FOLDER_ID }}
        SUPABASE_URL=${{ secrets.SUPABASE_URL }}
        SUPABASE_ANON_KEY=${{ secrets.SUPABASE_ANON_KEY }}
        EOF

    - name: Deploy with rsync
      run: |
        # Sync Python files, requirements, and tests
        rsync -avz --delete \
          --include='*.py' \
          --include='requirements.txt' \
          --include='tests/' \
          --include='tests/**' \
          --include='.env' \
          --exclude='.*' \
          --exclude='__pycache__/' \
          --exclude='*.pyc' \
          --exclude='venv/' \
          --exclude='github_deploy*' \
          ./ ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:${{ secrets.TARGET_DIR }}/

    - name: Post-deployment tasks
      run: |
        ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} 'bash -s' <<'EOF'
          set -e
          cd ${{ secrets.TARGET_DIR }}
          
          echo "ðŸ“¦ Installing dependencies..."
          pip3 install -r requirements.txt
          
          echo "ðŸ”„ Restarting PM2 process..."
          pm2 restart telegram-google --update-env || pm2 start telegram_agent_google.py --name telegram-google --interpreter python3
          pm2 save
          
          echo "âœ… Deployment completed!"
          pm2 list
        EOF