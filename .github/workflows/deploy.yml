name: Deploy Telegram Bot

on:
  push:
    branches:
      - main # Pipeline startet bei jedem Push auf den main-Branch

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run Tests
      env:
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        GROQ_API_KEY: ${{ secrets.GROQ_API_KEY }}
        GOOGLE_SERVICE_ACCOUNT_JSON: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_JSON }}
        SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
        SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
      run: pytest tests/ -v

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: success() # Nur deployen, wenn die Tests erfolgreich waren
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Deploy to Server
      uses: appleboy/ssh-action@v1.0.3
      env:
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        GROQ_API_KEY: ${{ secrets.GROQ_API_KEY }}
        GOOGLE_SERVICE_ACCOUNT_JSON: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_JSON }}
        GOOGLE_DRIVE_ROOT_FOLDER_ID: ${{ secrets.GOOGLE_DRIVE_ROOT_FOLDER_ID }}
        SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
        SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
      with:
        host: 157.90.232.184
        username: root
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        envs: TELEGRAM_BOT_TOKEN,GROQ_API_KEY,GOOGLE_SERVICE_ACCOUNT_JSON,GOOGLE_DRIVE_ROOT_FOLDER_ID,SUPABASE_URL,SUPABASE_ANON_KEY
        script: |
          # Verify SSH connection
          echo "âœ… SSH connection successful. Starting deployment..."
          
          # Navigate to project directory
          cd /var/www/mga-portal
          
          # Pull latest changes
          echo "ðŸ”„ Pulling latest changes..."
          git pull origin main
          
          # Install/update dependencies
          echo "ðŸ“¦ Installing dependencies..."
          pip3 install -r requirements.txt
          
          # Create environment file for PM2
          echo "ðŸ”§ Creating environment file..."
          cat > .env << EOF
          TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
          GROQ_API_KEY=${GROQ_API_KEY}
          GOOGLE_SERVICE_ACCOUNT_JSON=${GOOGLE_SERVICE_ACCOUNT_JSON}
          GOOGLE_DRIVE_ROOT_FOLDER_ID=${GOOGLE_DRIVE_ROOT_FOLDER_ID}
          SUPABASE_URL=${SUPABASE_URL}
          SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
          EOF
          
          # Check if PM2 process exists
          echo "ðŸ”„ Managing PM2 process..."
          if pm2 list | grep -q "telegram-google"; then
            echo "Restarting existing process..."
            pm2 restart telegram-google --update-env
          else
            echo "Starting new process..."
            pm2 start src/telegram_agent_google.py --name telegram-google --interpreter python3
          fi
          
          # Save PM2 configuration
          pm2 save
          
          # Show status
          echo "ðŸ“Š PM2 Status:"
          pm2 list
          
          echo "âœ… Deployment completed successfully!"