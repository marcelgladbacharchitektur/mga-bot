name: Test Secrets Configuration

on:
  workflow_dispatch:

jobs:
  test-secrets:
    runs-on: ubuntu-latest
    
    steps:
    - name: Test Secret Configuration
      run: |
        echo "üîç Testing GitHub Secrets Configuration..."
        echo "========================================="
        
        # Function to check if a secret is set
        check_secret() {
          local secret_name=$1
          local secret_value=$2
          
          if [ -z "$secret_value" ]; then
            echo "‚ùå $secret_name: NOT SET"
            return 1
          else
            # Show partial value for verification (first and last 3 chars)
            local length=${#secret_value}
            if [ $length -gt 6 ]; then
              echo "‚úÖ $secret_name: SET (${secret_value:0:3}...${secret_value: -3} - length: $length)"
            else
              echo "‚úÖ $secret_name: SET (length: $length)"
            fi
            return 0
          fi
        }
        
        # Track if all secrets are set
        all_set=true
        
        echo ""
        echo "üì± Telegram Configuration:"
        check_secret "TELEGRAM_BOT_TOKEN" "${{ secrets.TELEGRAM_BOT_TOKEN }}" || all_set=false
        
        echo ""
        echo "ü§ñ API Keys:"
        check_secret "GROQ_API_KEY" "${{ secrets.GROQ_API_KEY }}" || all_set=false
        
        echo ""
        echo "üîë Google Configuration:"
        check_secret "GOOGLE_SERVICE_ACCOUNT_JSON" "${{ secrets.GOOGLE_SERVICE_ACCOUNT_JSON }}" || all_set=false
        check_secret "GOOGLE_DRIVE_ROOT_FOLDER_ID" "${{ secrets.GOOGLE_DRIVE_ROOT_FOLDER_ID }}" || all_set=false
        
        echo ""
        echo "üóÑÔ∏è Supabase Configuration:"
        check_secret "SUPABASE_URL" "${{ secrets.SUPABASE_URL }}" || all_set=false
        check_secret "SUPABASE_ANON_KEY" "${{ secrets.SUPABASE_ANON_KEY }}" || all_set=false
        
        echo ""
        echo "üîê SSH Configuration:"
        check_secret "SSH_PRIVATE_KEY" "${{ secrets.SSH_PRIVATE_KEY }}" || all_set=false
        check_secret "SSH_HOST" "${{ secrets.SSH_HOST }}" || all_set=false
        check_secret "SSH_USER" "${{ secrets.SSH_USER }}" || all_set=false
        check_secret "TARGET_DIR" "${{ secrets.TARGET_DIR }}" || all_set=false
        
        echo ""
        echo "========================================="
        
        # Summary
        if [ "$all_set" = true ]; then
          echo "‚úÖ All secrets are configured!"
          
          # Additional validation
          echo ""
          echo "üìã Additional Validations:"
          
          # Check if GOOGLE_SERVICE_ACCOUNT_JSON is valid JSON
          if echo "${{ secrets.GOOGLE_SERVICE_ACCOUNT_JSON }}" | python3 -m json.tool > /dev/null 2>&1; then
            echo "‚úÖ GOOGLE_SERVICE_ACCOUNT_JSON is valid JSON"
          else
            echo "‚ö†Ô∏è  GOOGLE_SERVICE_ACCOUNT_JSON might not be valid JSON"
          fi
          
          # Check if SSH_HOST looks like a valid hostname/IP
          if [[ "${{ secrets.SSH_HOST }}" =~ ^[a-zA-Z0-9.-]+$ ]]; then
            echo "‚úÖ SSH_HOST format looks valid"
          else
            echo "‚ö†Ô∏è  SSH_HOST format might be invalid"
          fi
          
          # Check if TARGET_DIR starts with /
          if [[ "${{ secrets.TARGET_DIR }}" =~ ^/ ]]; then
            echo "‚úÖ TARGET_DIR is an absolute path"
          else
            echo "‚ö†Ô∏è  TARGET_DIR should be an absolute path (starting with /)"
          fi
          
          exit 0
        else
          echo "‚ùå Some secrets are missing! Please configure them in:"
          echo "   Settings ‚Üí Secrets and variables ‚Üí Actions"
          exit 1
        fi